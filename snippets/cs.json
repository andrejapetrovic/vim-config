{
  "Class": {
    "prefix": "class",
    "body": ["class ${1:Name}", "{", "\t$0", "}"],
    "description": "Class"
  },
  "constructor": {
    "prefix": "ctor",
    "body": ["${1:public} ${2:ClassName}(${3:Parameters})", "{", "\t$0", "}"],
    "description": "constructor"
  },
  "Console.WriteLine": {
    "prefix": "cw",
    "body": ["System.Console.WriteLine($0);"],
    "description": "Console.WriteLine"
  },
  "do...while loop": {
    "prefix": "do",
    "body": ["do", "{", "\t$0", "}", "while (${1:true});"],
    "description": "do...while loop"
  },
  "Else statement": {
    "prefix": "else",
    "body": ["else", "{", "\t$0", "}"],
    "description": "Else statement"
  },
  "Enum": {
    "prefix": "enum",
    "body": ["enum ${1:Name}", "{", "\t$0", "}"],
    "description": "Enum"
  },
  "xUnit Test": {
    "prefix": "fact",
    "body": [
      "[Fact]",
      "public void ${1:TestName}()",
      "{",
      "// Arrange",
      "",
      "// Act",
      "",
      "// Assert",
      "}$0"
    ],
    "description": "create xunit test method"
  },
  "for loop": {
    "prefix": "for",
    "body": [
      "for (int ${1:i} = 0; ${1:i} < ${2:length}; ${1:i}++)",
      "{",
      "\t$0",
      "}"
    ],
    "description": "for loop"
  },
  "Foreach statement": {
    "prefix": "foreach",
    "body": [
      "foreach (${1:var} ${2:item} in ${3:collection})",
      "{",
      "\t$0",
      "}"
    ],
    "description": "Foreach statement"
  },
  "Creates a new instance of the Guid structure": {
    "prefix": "guid",
    "body": ["var ${1:guid} = System.Guid.NewGuid();$0"],
    "description": "New Guid"
  },
  "if statement": {
    "prefix": "if",
    "body": ["if (${1:true})", "{", "\t$0", "}"],
    "description": "if statement"
  },
  "#if": {
    "prefix": "ifd",
    "body": ["#if ${1:true}", "\t$0", "#endif"],
    "description": "#if"
  },
  "Interface": {
    "prefix": "interface",
    "body": ["interface I${1:Name}", "{", "\t$0", "}"],
    "description": "Interface"
  },
  "MessageBox.Show": {
    "prefix": "mbox",
    "body": ["System.Windows.Forms.MessageBox.Show(\"${1:Text}\");$0"],
    "description": "MessageBox.Show"
  },
  "Namespace": {
    "prefix": "namespace",
    "body": ["namespace ${1:Name}", "{", "\t$0", "}"],
    "description": "Namespace"
  },
  "prop": {
    "prefix": "prop",
    "body": ["public ${1:int} ${2:PropertyName} { get; set; }$0"],
    "description": "An automatically implemented property."
  },
  "Property and backing field": {
    "prefix": "propfull",
    "body": [
      "private ${1:int} ${2:backingField};",
      "public ${1:int} ${3:PropertyName}",
      "{",
      "\tget { return ${2:backingField};}",
      "\tset { ${2:backingField} = value;}",
      "}",
      "$0"
    ],
    "description": "Property and backing field"
  },
  "svm": {
    "prefix": "svm",
    "body": ["static void Main(string[] args)", "{", "\t$0", "}"],
    "description": "void Main()"
  },
  "Switch statement": {
    "prefix": "switch",
    "body": ["switch (${1:switch_on})", "{", "\t$0", "\tdefault:", "}"],
    "description": "Switch statement"
  },
  "Try catch": {
    "prefix": "try",
    "body": [
      "try",
      "{",
      "\t$1",
      "}",
      "catch (${2:System.Exception})",
      "{",
      "\t$0",
      "\tthrow;",
      "}"
    ],
    "description": "Try catch"
  },
  "Try finally": {
    "prefix": "tryf",
    "body": ["try", "{", "\t$1", "}", "finally", "{", "\t$0", "}"],
    "description": "Try finally"
  },
  "Using statement": {
    "prefix": "using",
    "body": ["using (${1:resource})", "{", "\t$0", "}"],
    "description": "Using statement"
  },
  "While loop": {
    "prefix": "while",
    "body": ["while (${1:true})", "{", "\t$0", "}"],
    "description": "While loop"
  }
}
